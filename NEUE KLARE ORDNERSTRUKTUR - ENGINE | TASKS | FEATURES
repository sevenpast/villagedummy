village-app/
â”‚
â”œâ”€â”€ ðŸ“‚ app/                          # Next.js App Router (UI ONLY)
â”‚   â”œâ”€â”€ (auth)/
â”‚   â”‚   â”œâ”€â”€ login/
â”‚   â”‚   â”‚   â””â”€â”€ page.tsx            # Thin UI wrapper
â”‚   â”‚   â””â”€â”€ layout.tsx
â”‚   â”‚
â”‚   â”œâ”€â”€ (dashboard)/
â”‚   â”‚   â”œâ”€â”€ dashboard/
â”‚   â”‚   â”‚   â””â”€â”€ page.tsx            # Thin UI - calls engine
â”‚   â”‚   â”œâ”€â”€ tasks/
â”‚   â”‚   â”‚   â””â”€â”€ [taskId]/
â”‚   â”‚   â”‚       â””â”€â”€ page.tsx        # Dynamic task router
â”‚   â”‚   â””â”€â”€ layout.tsx
â”‚   â”‚
â”‚   â”œâ”€â”€ api/                         # Thin API routes
â”‚   â”‚   â”œâ”€â”€ tasks/
â”‚   â”‚   â”‚   â””â”€â”€ [action]/
â”‚   â”‚   â”‚       â””â”€â”€ route.ts        # Just calls engine
â”‚   â”‚   â””â”€â”€ features/
â”‚   â”‚       â””â”€â”€ pdf/
â”‚   â”‚           â”œâ”€â”€ upload/
â”‚   â”‚           â”‚   â””â”€â”€ route.ts
â”‚   â”‚           â””â”€â”€ analyze/
â”‚   â”‚               â””â”€â”€ route.ts
â”‚   â”‚
â”‚   â”œâ”€â”€ page.tsx
â”‚   â”œâ”€â”€ layout.tsx
â”‚   â””â”€â”€ globals.css
â”‚
â”œâ”€â”€ ðŸ“‚ engine/                       # ðŸ”¥ CORE ENGINE (Business Logic)
â”‚   â”œâ”€â”€ core/                        # Core system
â”‚   â”‚   â”œâ”€â”€ task-engine.ts          # Task matching & personalization
â”‚   â”‚   â”œâ”€â”€ user-engine.ts          # User segmentation & profile
â”‚   â”‚   â”œâ”€â”€ ai-engine.ts            # AI orchestration
â”‚   â”‚   â””â”€â”€ notification-engine.ts  # Reminders & notifications
â”‚   â”‚
â”‚   â”œâ”€â”€ services/                    # Business services
â”‚   â”‚   â”œâ”€â”€ task-service.ts         # Task CRUD & logic
â”‚   â”‚   â”œâ”€â”€ user-service.ts         # User CRUD & logic
â”‚   â”‚   â”œâ”€â”€ auth-service.ts         # Authentication logic
â”‚   â”‚   â””â”€â”€ analytics-service.ts    # Event tracking
â”‚   â”‚
â”‚   â”œâ”€â”€ ai/                          # AI layer
â”‚   â”‚   â”œâ”€â”€ providers/
â”‚   â”‚   â”‚   â”œâ”€â”€ gemini.ts           # Gemini provider
â”‚   â”‚   â”‚   â”œâ”€â”€ openai.ts           # OpenAI provider (future)
â”‚   â”‚   â”‚   â””â”€â”€ anthropic.ts        # Claude provider (future)
â”‚   â”‚   â”‚
â”‚   â”‚   â”œâ”€â”€ prompts/
â”‚   â”‚   â”‚   â”œâ”€â”€ task-generation.ts  # Task-related prompts
â”‚   â”‚   â”‚   â”œâ”€â”€ email-generation.ts # Email prompts
â”‚   â”‚   â”‚   â””â”€â”€ document-analysis.ts # PDF analysis prompts
â”‚   â”‚   â”‚
â”‚   â”‚   â””â”€â”€ orchestrator.ts         # AI request orchestrator
â”‚   â”‚
â”‚   â”œâ”€â”€ database/                    # Database layer
â”‚   â”‚   â”œâ”€â”€ client.ts               # Supabase client
â”‚   â”‚   â”œâ”€â”€ queries/
â”‚   â”‚   â”‚   â”œâ”€â”€ tasks.ts            # Task queries
â”‚   â”‚   â”‚   â”œâ”€â”€ users.ts            # User queries
â”‚   â”‚   â”‚   â””â”€â”€ documents.ts        # Document queries
â”‚   â”‚   â”‚
â”‚   â”‚   â””â”€â”€ mutations/
â”‚   â”‚       â”œâ”€â”€ tasks.ts            # Task mutations
â”‚   â”‚       â””â”€â”€ users.ts            # User mutations
â”‚   â”‚
â”‚   â”œâ”€â”€ utils/                       # Utilities
â”‚   â”‚   â”œâ”€â”€ date.ts
â”‚   â”‚   â”œâ”€â”€ validation.ts
â”‚   â”‚   â”œâ”€â”€ formatting.ts
â”‚   â”‚   â””â”€â”€ constants.ts
â”‚   â”‚
â”‚   â””â”€â”€ types/                       # Shared types
â”‚       â”œâ”€â”€ task.ts
â”‚       â”œâ”€â”€ user.ts
â”‚       â””â”€â”€ index.ts
â”‚
â”œâ”€â”€ ðŸ“‚ tasks/                        # ðŸ“‹ TASK IMPLEMENTATIONS
â”‚   â”œâ”€â”€ components/                  # Task UI components
â”‚   â”‚   â”œâ”€â”€ Task1ResidencePermit/
â”‚   â”‚   â”‚   â”œâ”€â”€ index.tsx           # Main component
â”‚   â”‚   â”‚   â”œâ”€â”€ PermitForm.tsx      # Sub-component
â”‚   â”‚   â”‚   â””â”€â”€ styles.module.css   # Task-specific styles
â”‚   â”‚   â”‚
â”‚   â”‚   â”œâ”€â”€ Task3Municipality/
â”‚   â”‚   â”‚   â”œâ”€â”€ index.tsx
â”‚   â”‚   â”‚   â”œâ”€â”€ ChecklistGenerator.tsx
â”‚   â”‚   â”‚   â””â”€â”€ EmailGenerator.tsx
â”‚   â”‚   â”‚
â”‚   â”‚   â”œâ”€â”€ Task4School/
â”‚   â”‚   â”‚   â”œâ”€â”€ index.tsx
â”‚   â”‚   â”‚   â””â”€â”€ SchoolRegistration.tsx
â”‚   â”‚   â”‚
â”‚   â”‚   â””â”€â”€ shared/                 # Shared task components
â”‚   â”‚       â”œâ”€â”€ TaskCard.tsx
â”‚   â”‚       â”œâ”€â”€ TaskHeader.tsx
â”‚   â”‚       â”œâ”€â”€ TaskActions.tsx
â”‚   â”‚       â””â”€â”€ ProgressBar.tsx
â”‚   â”‚
â”‚   â”œâ”€â”€ logic/                       # Task-specific logic
â”‚   â”‚   â”œâ”€â”€ task1-permit.ts         # Task 1 business logic
â”‚   â”‚   â”œâ”€â”€ task3-municipality.ts   # Task 3 business logic
â”‚   â”‚   â”œâ”€â”€ task4-school.ts         # Task 4 business logic
â”‚   â”‚   â””â”€â”€ task-helpers.ts         # Shared task helpers
â”‚   â”‚
â”‚   â””â”€â”€ config/
â”‚       â””â”€â”€ tasks.config.ts         # Task definitions & metadata
â”‚
â”œâ”€â”€ ðŸ“‚ features/                     # âš¡ FEATURE MODULES
â”‚   â”œâ”€â”€ pdf-upload/                  # PDF Upload & Fill Feature
â”‚   â”‚   â”œâ”€â”€ components/
â”‚   â”‚   â”‚   â”œâ”€â”€ PDFUploader.tsx     # Upload UI
â”‚   â”‚   â”‚   â”œâ”€â”€ PDFAnalyzer.tsx     # Analysis UI
â”‚   â”‚   â”‚   â””â”€â”€ PDFEditor.tsx       # Field editor UI
â”‚   â”‚   â”‚
â”‚   â”‚   â”œâ”€â”€ services/
â”‚   â”‚   â”‚   â”œâ”€â”€ pdf-service.ts      # PDF processing logic
â”‚   â”‚   â”‚   â”œâ”€â”€ pdf-parser.ts       # PDF parsing
â”‚   â”‚   â”‚   â””â”€â”€ pdf-filler.ts       # PDF filling
â”‚   â”‚   â”‚
â”‚   â”‚   â””â”€â”€ types/
â”‚   â”‚       â””â”€â”€ pdf.ts              # PDF-specific types
â”‚   â”‚
â”‚   â”œâ”€â”€ email-automation/            # Email Feature
â”‚   â”‚   â”œâ”€â”€ components/
â”‚   â”‚   â”‚   â”œâ”€â”€ EmailComposer.tsx
â”‚   â”‚   â”‚   â””â”€â”€ EmailPreview.tsx
â”‚   â”‚   â”‚
â”‚   â”‚   â””â”€â”€ services/
â”‚   â”‚       â””â”€â”€ email-service.ts
â”‚   â”‚
â”‚   â”œâ”€â”€ document-manager/            # Document Management
â”‚   â”‚   â”œâ”€â”€ components/
â”‚   â”‚   â”‚   â”œâ”€â”€ DocumentList.tsx
â”‚   â”‚   â”‚   â””â”€â”€ DocumentViewer.tsx
â”‚   â”‚   â”‚
â”‚   â”‚   â””â”€â”€ services/
â”‚   â”‚       â””â”€â”€ document-service.ts
â”‚   â”‚
â”‚   â””â”€â”€ reminders/                   # Reminder System
â”‚       â”œâ”€â”€ components/
â”‚       â”‚   â””â”€â”€ ReminderModal.tsx
â”‚       â”‚
â”‚       â””â”€â”€ services/
â”‚           â””â”€â”€ reminder-service.ts
â”‚
â”œâ”€â”€ ðŸ“‚ components/                   # Shared UI Components
â”‚   â”œâ”€â”€ ui/                          # Base UI elements
â”‚   â”‚   â”œâ”€â”€ Button.tsx
â”‚   â”‚   â”œâ”€â”€ Input.tsx
â”‚   â”‚   â”œâ”€â”€ Modal.tsx
â”‚   â”‚   â”œâ”€â”€ Card.tsx
â”‚   â”‚   â””â”€â”€ Spinner.tsx
â”‚   â”‚
â”‚   â””â”€â”€ layout/                      # Layout components
â”‚       â”œâ”€â”€ Navbar.tsx
â”‚       â”œâ”€â”€ Sidebar.tsx
â”‚       â””â”€â”€ Footer.tsx
â”‚
â”œâ”€â”€ ðŸ“‚ hooks/                        # React Hooks
â”‚   â”œâ”€â”€ useAuth.ts                   # Authentication
â”‚   â”œâ”€â”€ useUser.ts                   # User data
â”‚   â”œâ”€â”€ useTasks.ts                  # Task management
â”‚   â””â”€â”€ useFeature.ts                # Feature flags
â”‚
â”œâ”€â”€ ðŸ“‚ config/                       # Configuration
â”‚   â”œâ”€â”€ app.config.ts                # App-wide config
â”‚   â”œâ”€â”€ features.config.ts           # Feature flags
â”‚   â””â”€â”€ env.ts                       # Environment validation
â”‚
â”œâ”€â”€ ðŸ“‚ lib/                          # External integrations
â”‚   â”œâ”€â”€ supabase.ts                  # Supabase setup
â”‚   â”œâ”€â”€ analytics.ts                 # Analytics setup
â”‚   â””â”€â”€ sentry.ts                    # Error tracking
â”‚
â”œâ”€â”€ ðŸ“‚ scripts/                      # Scripts
â”‚   â”œâ”€â”€ seed-db.ts                   # Database seeding
â”‚   â””â”€â”€ migrate.ts                   # Migrations
â”‚
â”œâ”€â”€ ðŸ“‚ public/                       # Static assets
â”‚   â”œâ”€â”€ images/
â”‚   â””â”€â”€ fonts/
â”‚
â”œâ”€â”€ .env.local
â”œâ”€â”€ .gitignore
â”œâ”€â”€ package.json
â”œâ”€â”€ tsconfig.json
â”œâ”€â”€ tailwind.config.ts
â””â”€â”€ next.config.js