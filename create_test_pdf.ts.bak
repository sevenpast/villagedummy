// scripts/create-test-pdf.ts
// Run: npx tsx scripts/create-test-pdf.ts

import { PDFDocument, StandardFonts, rgb } from 'pdf-lib';
import fs from 'fs';

async function createTestPDF() {
  // Create a new PDF document
  const pdfDoc = await PDFDocument.create();
  const page = pdfDoc.addPage([595, 842]); // A4 size
  const font = await pdfDoc.embedFont(StandardFonts.Helvetica);
  const form = pdfDoc.getForm();

  // Title
  page.drawText('Anmeldeformular - Test Form', {
    x: 50,
    y: 800,
    size: 20,
    font,
    color: rgb(0, 0, 0),
  });

  page.drawText('Municipality Registration Form', {
    x: 50,
    y: 775,
    size: 12,
    font,
    color: rgb(0.5, 0.5, 0.5),
  });

  // Create form fields
  const fields = [
    { label: 'Vorname (First Name):', name: 'vorname', y: 720 },
    { label: 'Nachname (Last Name):', name: 'nachname', y: 680 },
    { label: 'Geburtsdatum (Date of Birth):', name: 'geburtsdatum', y: 640 },
    { label: 'E-Mail:', name: 'email', y: 600 },
    { label: 'Telefon (Phone):', name: 'telefon', y: 560 },
    { label: 'Strasse (Street Address):', name: 'strasse', y: 520 },
    { label: 'PLZ (Postal Code):', name: 'plz', y: 480 },
    { label: 'Ort (City):', name: 'ort', y: 440 },
    { label: 'Staatsangeh√∂rigkeit (Nationality):', name: 'nationalit√§t', y: 400 },
  ];

  for (const field of fields) {
    // Draw label
    page.drawText(field.label, {
      x: 50,
      y: field.y,
      size: 11,
      font,
      color: rgb(0, 0, 0),
    });

    // Create text field
    const textField = form.createTextField(field.name);
    textField.addToPage(page, {
      x: 50,
      y: field.y - 25,
      width: 450,
      height: 20,
      borderWidth: 1,
      borderColor: rgb(0, 0, 0),
    });
  }

  // Checkbox
  page.drawText('‚òê Ich habe Kinder (I have children)', {
    x: 50,
    y: 340,
    size: 11,
    font,
  });

  const checkbox = form.createCheckBox('kinder');
  checkbox.addToPage(page, {
    x: 50,
    y: 315,
    width: 15,
    height: 15,
  });

  // Radio buttons
  page.drawText('Kanton (Canton):', {
    x: 50,
    y: 280,
    size: 11,
    font,
  });

  const radioGroup = form.createRadioGroup('kanton');

  page.drawText('‚óã Z√ºrich', { x: 50, y: 255, size: 10, font });
  radioGroup.addOptionToPage('ZH', page, { x: 50, y: 255, width: 15, height: 15 });

  page.drawText('‚óã Bern', { x: 150, y: 255, size: 10, font });
  radioGroup.addOptionToPage('BE', page, { x: 150, y: 255, width: 15, height: 15 });

  page.drawText('‚óã Geneva', { x: 250, y: 255, size: 10, font });
  radioGroup.addOptionToPage('GE', page, { x: 250, y: 255, width: 15, height: 15 });

  // Footer
  page.drawText('Generated by Village App - PDF Auto-Fill Test', {
    x: 50,
    y: 50,
    size: 8,
    font,
    color: rgb(0.5, 0.5, 0.5),
  });

  // Save PDF
  const pdfBytes = await pdfDoc.save();
  fs.writeFileSync('test-form.pdf', pdfBytes);

  console.log('‚úÖ Test PDF created: test-form.pdf');
  console.log('üìÅ Open this file and upload it to http://localhost:3000/test-pdf');
}

createTestPDF().catch(console.error);